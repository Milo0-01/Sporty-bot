import requests
from bs4 import BeautifulSoup
import time
import sys
import os

# ----------- CONFIGURATION -----------
UPDATE_CHECK_URL = 'https://raw.githubusercontent.com/Milo0-01/Sporty-bot/refs/heads/main/Sporty.txt'
CHECK_UPDATE_INTERVAL = 3600  # 1 hour
FETCH_ODDS_INTERVAL = 300     # 5 minutes
ODDS_THRESHOLD = 2.0
SPORTYBET_URL = 'https://m.sportybet.com/ng/sports/virtuals/virtual-football'

# ----------- SELF UPDATE -----------
def fetch_latest_code():
    try:
        r = requests.get(UPDATE_CHECK_URL, timeout=10)
        if r.status_code == 200:
            return r.text
    except:
        pass
    return None

def update_self(new_code):
    try:
        script_path = os.path.realpath(__file__)
        with open(script_path, 'w', encoding='utf-8') as f:
            f.write(new_code)
        print("\n[Bot] Updated successfully. Restarting...\n")
        os.execv(sys.executable, ['python'] + sys.argv)
    except Exception as e:
        print(f"[Bot] Update failed: {e}")

def check_for_update():
    latest_code = fetch_latest_code()
    if not latest_code:
        return
    script_path = os.path.realpath(__file__)
    with open(script_path, 'r', encoding='utf-8') as f:
        current_code = f.read()
    if latest_code != current_code:
        print("\n[Bot] New version found. Updating...\n")
        update_self(latest_code)

# ----------- SPORTYBET SCRAPER -----------
def fetch_odds():
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        r = requests.get(SPORTYBET_URL, headers=headers, timeout=10)
        r.raise_for_status()
        soup = BeautifulSoup(r.text, 'html.parser')

        matches = soup.find_all('div', class_='event-list__event')
        results = []
        for match in matches:
            teams = match.find_all('span', class_='event-list__team-name')
            odds_spans = match.find_all('span', class_='event-list__odds')
            if len(teams) == 2 and len(odds_spans) >= 3:
                t1 = teams[0].text.strip()
                t2 = teams[1].text.strip()
                o1 = float(odds_spans[0].text.strip())
                draw = float(odds_spans[1].text.strip())
                o2 = float(odds_spans[2].text.strip())
                results.append((f"{t1} vs {t2}", o1, draw, o2))
        return results
    except Exception as e:
        print(f"[Bot] Error fetching odds: {e}")
        return []

# ----------- MAIN LOOP -----------
def main():
    print("[Bot] ✅ GitHub sync successful — running latest version\n")
    last_update = 0
    while True:
        now = time.time()
        if now - last_update > CHECK_UPDATE_INTERVAL:
            check_for_update()
            last_update = now

        odds = fetch_odds()
        if odds:
            print("\n" + "="*40)
            print(f"Sportybet Odds - {time.strftime('%H:%M:%S')}")
            print("="*40)
            for match, o1, draw, o2 in odds:
                mark1 = "✅" if o1 >= ODDS_THRESHOLD else ""
                markd = "✅" if draw >= ODDS_THRESHOLD else ""
                mark2 = "✅" if o2 >= ODDS_THRESHOLD else ""
                print(f"{match}")
                print(f"  1: {o1} {mark1} | X: {draw} {markd} | 2: {o2} {mark2}")
            print("="*40)
        else:
            print("[Bot] No odds found.")

        time.sleep(FETCH_ODDS_INTERVAL)

if __name__ == "__main__":
    main()
